<a name="additions"></a>
### Additions

We list all backwards-compatible additions here. These are currently available in all published versions.
(There is also a [list of backwards-incompatible upgrades](#changelog) available, but those only apply if you [upgrade your API version](#upgrading-your-api-version).)

#### Latest

- We added an `ids` filter to `lostReasons.list`.

- We added `lost_reason` to the response of `deals.info`.

- We added `lost_reason` to the response of `deals.list`. This is composed of a `lostReason` object along with a more elaborate `remark`.

- We added format `ubl/e-fff` to `invoices.download`.

- We added filters `estimated_closing_date_from` and `estimated_closing_date_until` to `deals.list`.

- We added a new sorting option `weighted_value` to `deals.list` and will allow ascending as well as descending orders on sorts.
  The default remains created_at and descending as before if nothing is passed.

- We added the `weighted_value` to the response of both `deals.list` and `deals.info` requests.

- We added the `extra_option_allowed` information (for single select custom fields) to `customFieldDefinitions.list` and `customFieldDefinitions.info` endpoints.

- We added format `ubl/e-fff` to `creditNotes.download`.

- We added a filter `term` to `invoices.list`.

- We added the `purchase_order_number` to the response of both `deals.list` and `deals.info` request.

- We added the `summary` to the response of both the `deals.list` and `deals.info` request. The `summary` can also be added and updated through the `deals.create` / `deals.update` endpoints.

- We added `depends_on` to the `milestones.info` and `milestones.list` endpoints.

- We added `dependency_for` to the `milestones.info` and `milestones.list` endpoints. This indicates all the milestones for which the current milestone is a dependency.

#### October 2019

- We added `milestones.delete`.

- We added a `estimated_closing_date` filter to `deals.list`.

- We added a filter `created_before` to `deal.list`.

- We modified filter `responsible_user_id` in `deal.list` to also accept an array of responsible_user_ids.

- Task custom fields are now included as `custom_fields` on `tasks.info`. They can also be added and updated through the `tasks.create` / `tasks.update` endpoints.

#### July 2019

- We added an `updated_since` filter to `products.list`

- We added `project` to `tasks.info` and `tasks.list`.

- We added a filter by `subject` to `timeTracking.list`.

- A `task_id` filter has been added to `/events.list`.

- We added a `term` filter to `milestone.list`.

#### June 2019

- We added a `term` filter to `tasks.list`.

- We added `tasks.complete` and `tasks.reopen` endpoints.

- We added `due_by` and `due_from` to `tasks.list` filters.

- We added a `tasks.schedule` endpoint.

- We added the ability to sort `tasks.list` based on a descending `due_at`.

- `tasks.info` and `tasks.list` now return information about the customer.

- We added `customer` parameter to `tasks.create` and `tasks.update`.

- In order to link milestones and deals to a task, we added `milestone_id` and `deal_id` as optional parameters to `tasks.create` and `tasks.update`.

- `tasks.list` and `tasks.info` now return the milestone and deal objects.

#### May 2019

- We added a `started_at` property to `timers.update` in order to be able to update the start time of a running timer.

- We added `sent` as a boolean to `invoices.info` and `invoices.list`.

- We added an optional filter on `ids` to `invoices.list`.

- We added `creditNote.booked` and `product.added` to the available webhooks list.

#### April 2019

- In `users.info`, we added the `status` property to the response since it is now possible to retrieve deactivated users.

- In `users.list`, you can now also request deactivated users, by using a new filter on `status`.
  By default, the endpoint keeps returning active users only. The status is also returned in the response data.

- We've added a `products.add` endpoint.
  Because you can provide the selling price of a product in this endpoint, we also return it in `products.info` from now on.

- We now also return the `payment_reference` of an invoice in the `invoices.list`.
  We also made it filterable through the `payment_reference` filter.

- We added the `purchase_order_number` to all relevant endpoints (`invoices.draft`, `invoices.update`, `invoices.info` and `invoices.list`).
  The property is also filterable through the `purchase_order_number` filter.

- We added `currency_exchange_rate` to `quotations.info`.

- The `events.list` endpoint now has an optional filter property `ids`.

- The `tasks.list` endpoint now has an optional filter property `ids`.

- We added an `invoices.credit` endpoint.

#### March 2019

- On `invoices.draft` and `invoices.update` you can now also provide (a) global discount(s) through the `discounts` property.

- We've published a bunch of `tasks` endpoints (`tasks.list`, `tasks.info`, `tasks.create`, `tasks.update`, `tasks.delete`).

- We now also return a `currency_exchange_rate` on all `.info` endpoints where we support multi-currency.
  That is `quotations.info`, `invoices.info` and `creditNotes.info`.

#### February 2019

- We now also return the `invoicing_method` of a milestone. Both in `milestones.list` and `milestones.info`.

- We now expose the invoiceability of time trackings and running timers. You can now use the `invoiceable` property on the following endpoints:
  - `timeTracking.list`
  - `timeTracking.info`
  - `timeTracking.add`
  - `timeTracking.update`
  - `timers.current`
  - `timers.start`
  - `timers.update`

  We also return an `invoiceable` preference in the `users.me` endpoint that exposes whether a user prefers to track time by default as invoiceable or not.

- We've added a `national_identification_number` property on contacts.
  You can read it from `contacts.list` and `contacts.info`.
  It's also writeable through `contacts.add` and `contacts.update`.

- Invoicing custom fields included as `custom_fields`.
  They are returned in `invoices.info`.
  They can be added or updated through `invoices.draft` and `invoices.update`.

- Deal can now be filtered with a `term` in `deals.list`.
  We will return deals of which the term is part of the title, reference or customer's name.

- We have created a way to fetch more data about related resources: sideloading.
  More information can be found [here](#sideloading).

- We didn't provide you with a way to find the uuid of a quotation.
  Based on a v1 deal id, you can now retrieve the uuid of a quotation with `migrate.id`.

#### January 2019

- The `projects.list` endpoint has an optional filter to filter on `term` now.
  We return projects for which the term appears in the title or description.

- During `invoices.draft` and `invoices.update`, we now allow you to provide a `withholding_tax_rate_id`.
  Don't worry if you don't know what this is. Withholding taxes only apply in certain countries, eg Spain or Italy.

- We added a filter on `term` in `users.list`.
  We return those users who have the term in their first name, last name or email address.

- We already had a part of the products APIs for our own usage, but since it might be useful to you, we are making it public.
  So `products.list` and `products.info` are now available for usage.
