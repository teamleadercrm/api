## Projects [/projects]

Projects allow users to work together as a team on a single project. They consist of one or more milestones, have one or more participants and are limited in time and budget.

*Required scopes: `projects`*

### projects.list [GET /projects.list]

Get a list of projects.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + filter (object, optional)
            + status (enum[string], optional)
                + Members
                    + active
                    + on_hold
                    + done
                    + cancelled
            + participant_id: `ed544eac-02e4-037b-8a1a-c8dd662bf621` (string, optional)
        + page (Page, optional)
        + sort (array, optional)
            + (object)
                + field (enum[string], required)
                    + Members
                        + due_on
                + order (enum[string], optional)
                    + Members
                        + asc
            + Default
                + (object)
                    + field: `due_on`
                    + order: `asc`

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (array)
            + (object)
                + id: `624ca743-8998-4f8c-add1-c427bb022166` (string)
                + reference: `PRO-2` (string)
                + title: `New company website` (string)
                + description (string)
                + status: `active` (enum[string])
                    + Members
                        + active
                        + on_hold
                        + done
                        + cancelled
                + customer (object)
                    + type: `contact` (string)
                    + id: `abbf02c0-8ff9-4048-b83f-5195035161e1` (string)
                + starts_on: `2016-02-04` (string)
                + due_on: `2016-10-14` (string)
                + source (object)
                    + type: `deal` (string)
                    + id: `5023d7c2-80d7-4d4b-b2bd-0fcaa6a1f069` (string)


### projects.info [GET /projects.info]

Get details for a single project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `8a04371b-2ffb-407b-9b24-d5b5452009c7` (string, required)

+ Response 200 (application/json;charset=utf-8)

    + Attributes (object)
        + data (object)
            + id: `8a04371b-2ffb-407b-9b24-d5b5452009c7` (string)
            + reference: `PRO-1` (string)
            + title: `New company website` (string)
            + description (string)
            + status: `active` (enum[string])
                + Members
                    + active
                    + on_hold
                    + done
                    + cancelled
            + customer (object)
                + type: `contact` (enum[string])
                    + Members
                        + contact
                        + company
                + id: `de41d3e8-808f-4279-b6ff-4706b04c8df2` (string)
            + starts_on: `2016-02-04` (string)
            + due_on: `2016-02-04` (string)
            + source (object)
                + type: `deal` (string)
                + id: `39abbf9e-9692-4cca-b20d-79577890752c` (string)
            + milestones (array)
                + (object)
                    + type: `milestone` (string)
                    + id: `7c6b5e26-3068-47a6-bf3b-431d7ab7e704` (string)
            + participants (array)
                + (object)
                    + participant (object)
                        + type: `user` (enum[string])
                            + Members
                                + user
                        + id: `b0ef899b-143c-4708-90ce-aecb3350e116` (string)
                    + role (enum[string])
                        + Members
                            + decision_maker
                            + member


### projects.create [POST /projects.create]

Create a new project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + title: `New company website` (string, required)
        + description (string, optional)
        + starts_on: `2016-02-04` (string, required)
        + milestones (array, required) - At least one milestone is required
            + (object)
                + due_on: `2018-01-01` (string, required)
                + name: `Initial setup` (string, required)
                + responsible_user_id: `e1240972-6cfc-4549-b49c-edda7568cc48` (string, required)
        + participants (array, required) - At least one decision making participant is required
            + (object)
                + participant (object, required)
                    + type: `user` (string, required)
                    + id: `e1240972-6cfc-4549-b49c-edda7568cc48` (string, required)
                + role (enum[string], optional)
                    + Members
                        + decision_maker
                        + member
                    + Default: `member`
        + customer (object, optional)
            + type (enum[string], required)
                + Members
                    + contact
                    + company
            + id: `ebafa4c5-fa8a-4409-92e5-1b192243372f` (string, required)

+ Response 201 (application/json;charset=utf-8)

    + Attributes (object)
        + data (object)
            + type: `project` (string)
            + id: `c47e8e40-9a16-468f-9b29-38aea8ae4210` (string)


### projects.update [POST /projects.update]

Update a project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `dcc2e8ed-51be-4cb6-9c01-034aedac86fd` (string, required)
        + title: `New company website` (string, required)
        + description (string, required)
        + status: `active` (enum[string], required)
            + Members
                + active
                + on_hold
                + done
                + cancelled
        + starts_on: `2016-02-04` (string, required)

+ Response 204 (application/json;charset=utf-8)


### projects.delete [POST /projects.delete]

Delete a project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `01548b10-4932-4a18-8a89-005ad09db2c8` (string, required)

+ Response 204 (application/json;charset=utf-8)


### projects.addParticipant [POST /projects.addParticipant]

Add a participant to a project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `8dbfa9db-c53f-410c-97d3-755b19685809` (string, required)
        + participant (object, required)
            + type: `user` (string)
            + id: `a1388f3d-6116-4792-ac1c-04657697539e` (string)
        + role (enum[string], optional)
            + Members
                + decision_maker
                + member
            + Default: `member`

+ Response 204


### projects.updateParticipant [POST /projects.updateParticipant]

Update a participant's role for a project.

+ Request (application/json;charset=utf-8)

    + Attributes (object)
        + id: `55fbe14f-7399-48e5-b4e0-64b7f5c50451` (string, required)
        + participant (object, optional)
            + type: `user` (string)
            + id: `5ccbc008-f65e-4192-836c-4d7e21f54052` (string)
        + role (enum[string], required)
            + Members
                + decision_maker
                + member

+ Response 204
