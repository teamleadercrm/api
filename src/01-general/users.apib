## Users [/users]

Users are co-workers in a Teamleader account.

*Required scopes: `users`*

### users.me [POST /users.me]

Get the current authenticated user.

+ Response 200 (application/json)

    + Attributes
        + data (object)
            + id: `cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5` (string)
            + account (object)
                + type: `account` (string)
                + id: `0fc55513-7f68-4865-aba0-de5da9e4e43d` (string)
            + first_name: `John` (string)
            + last_name: `Smith` (string)
            + email: `john@teamleader.eu` (string)
            + email_verification_status: `confirmed` (enum)
                + Members
                    + pending
                    + confirmed
            + telephones (array[Telephone])
            + language: `nl-BE` (enum)
                + Members
                    + da-DK
                    + de-DE
                    + en-GB
                    + es-ES
                    + fi-FI
                    + fr-FR
                    + it-IT
                    + nb-NO
                    + nl-BE
                    + nl-NL
                    + pl-PL
                    + pt-PT
                    + sv-SE
                    + tr-TR
            + function: `Sales` (string)
            + time_zone: `Europe/Brussels` (string)
            + preferences (object)
                + invoiceable: true (boolean)
                + historic_time_tracking_limit (object, nullable)
                    + unit (enum)
                        + Members
                            + hour - Hours
                    + value: 24 (number)
                + whitelabeling: true (boolean)

### users.list [POST /users.list]

Get a list of all users.

+ Request (application/json)

    + Attributes (object)
        + filter (object, optional)
            + ids: `cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5`,`f8a57a6f-dd1e-41a3-b8d3-428663f1d09e` (array[string], optional)
            + term: `John` (string, optional) - Filters on first name, last name, email and function
            + status (array[enum], optional) - Filters on status
                + Members
                    + active - Filters on active users
                    + deactivated - Filters on deactivated users
        + sort (array, optional)
            + (object)
                + field (enum, required)
                    + Members
                        + first_name
                        + last_name
                        + email
                        + function
                + order (enum, optional)
                    + Members
                        + asc
                        + desc
            + Default
                + (array)
                    + (object)
                        + field: `first_name`
                        + order: `asc`
                    + (object)
                        + field: `last_name`
                        + order: `asc`
        + page (Page, optional)

+ Response 200 (application/json)

    + Attributes (object)
        + data (array)
            + (object)
                + id: `cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5` (string)
                + account (object)
                    + type: `account` (string)
                    + id: `0fc55513-7f68-4865-aba0-de5da9e4e43d` (string)
                + first_name: `John` (string)
                + last_name: `Smith` (string)
                + email: `john@teamleader.eu` (string)
                + telephones (array[Telephone])
                + language: `nl` (string)
                + function: `Sales` (string)
                + status: `active` (enum)
                    + Members
                        + active
                        + deactivated
                + teams (array)
                    + (object)
                        + type: `team` (string)
                        + id: `6dd0069e-45da-0ec4-911a-afb351d968cd`


### users.info [POST /users.info]

Get details for a single user.

+ Request (application/json)

    + Attributes (object)
        + id: `cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5` (string, required)
        + includes: `external_rate` (string, optional) - when used, the response will include `external_rate`

+ Response 200 (application/json)

    + Attributes
        + data (object)
            + id: `cb8da52a-ce89-4bf6-8f7e-8ee6cb85e3b5` (string)
            + account (object)
                + type: `account` (string)
                + id: `0fc55513-7f68-4865-aba0-de5da9e4e43d` (string)
            + first_name: `John` (string)
            + last_name: `Smith` (string)
            + email: `john@teamleader.eu` (string)
            + telephones (array[Telephone])
            + language: `nl-BE` (enum)
                + Members
                    + da-DK
                    + de-DE
                    + en-GB
                    + es-ES
                    + fi-FI
                    + fr-FR
                    + it-IT
                    + nb-NO
                    + nl-BE
                    + nl-NL
                    + pl-PL
                    + pt-PT
                    + sv-SE
                    + tr-TR
            + function: `Sales` (string)
            + time_zone: `Europe/Brussels` (string)
            + status: `active` (enum)
                + Members
                    + active
                    + deactivated
            + teams (array)
                + (object)
                    + type: `team` (string)
                    + id: `6dd0069e-45da-0ec4-911a-afb351d968cd`
            + `external_rate` (Money, nullable) - Only included with request parameter `includes=external_rate`


### users.listDaysOff [POST /users.listDaysOff]

Returns information about days off of a given user.

+ Request (application/json)
    + Attributes (object)
        + id: `87982c96-f2fe-4b05-838c-ff42c0525758` (string, required)
        + filter (object, optional)
            + `starts_after`: `2023-10-01` (string, optional) - Start of the period for which to return days off.
            + `ends_before`: `2023-10-30` (string, optional) - End of the period for which to return days off.
        + page (Page, optional)

+ Response 200 (application/json)
    + Attributes (object)
        + data (array)
            + (object)
                + `id`: `f611da79-90c2-02b1-b819-a810e0c77291` (string)
                + `starts_at`: `2023-10-01T09:00:00+01:00` (string)
                + `ends_at`: `2023-10-20T18:00:00+01:00` (string)
                + user (object)
                    + `type`: `user` (enum[string])
                        + Members
                            + `user`
                    + `id`: `b5094b3f-bb7a-0391-b01b-e709773f3509` (string)
                + leave_type (object)
                    + `type`: `dayOffType` (enum[string])
                        + Members
                            + `dayOffType`
                    + `id`: `f68b123c-4c36-0f5c-ac16-11f498e5dc01` (string)
                + `status`: `approved` (enum)
                    + Members
                        + `approved`
                        + `not_approved`
                        + `pending`
        + meta (object) - Only included with request parameter `includes=pagination`
            + page (Pagination)
            + matches: `12` (number)