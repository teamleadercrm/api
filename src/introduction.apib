#### New API - This is still a BETA version.

Our new API is currently available in beta version for you to test. We invite you to read through the documentation and test the new endpoints. Do you have any feedback? Don’t hesitate to let us know via [api@teamleader.eu](mailto:api@teamleader.eu).
This documentation isn’t final yet and is subject to change prior to our official release, although we will limit this to a minimum.

## AP-What?

An API is an Application Programming Interface. It is used to programmatically interact with Teamleader, integrate with other software tools or add custom functionalities to Teamleader.

Before creating a new integration, make sure to check our existing integrations built by our community in our [Teamleader Marketplace](https://marketplace.teamleader.eu).

## General principles

### Endpoints

Our API consists of HTTP RPC-style methods, in the form of `https://api.teamleader.eu/resource.action`.

We chose this action based approach over the more popular REST, because it enables us to have domain related actions on resources such as `invoices.book`, `timetracking.start` and `timetracking.stop`.

### Requests

All methods must be called using HTTPS. Data is passed as JSON data in a POST request or as GET query parameters.

For more complex actions we recommend using POST requests with JSON:

```
POST https://api.teamleader.eu/invoices.list

{
    "filter": {
        "department_id": "9d4096c3-813f-4bd5-b3c4-4091807b5b74"
    },
    "page": {
        "size": 50,
        "number": 3
    }
}
```

The GET equivalent:

```
GET https://api.teamleader.eu/invoices.list?filter[department_id]=9d4096c3-813f-4bd5-b3c4-4091807b5b74&page[number]=3&page[size]=50&company_id=3250c613-c478-4a43-9640-b97da923eb21
```

### Responses

Both single objects and collections are returned as JSON objects, keyed by `data` in the top level of a JSON object:

```json
{
    "data": {
        "id": "f1dfb84c-3c29-4548-9b9b-9090a080742a",
        "first_name": "Erlich",
        "last_name": "Bachman",
        "salutation": "Mr",
        "email": "info@piedpiper.eu"
    }
}
```

Responses may also contain meta data for pagination.

### Errors

Errors are always returned as an array of error objects, keyed by `errors` in the top level of a JSON object:

```json
{
  "errors": [
    {
      "title": "Company name must not be empty"
    }
  ]
}
```

### Rate limiting

To ensure a fast and predictable experience for everyone, all our API endpoints have a rate limit of **100 calls per minute** for each integration (or client id) to a Teamleader account.

When you go over this limit, our API will respond with a `HTTP 429 Too Many Requests error`.

If your integrations needs a higher limit, send us an email at [api@teamleader.eu](mailto:api@teamleader.eu) with a detailed explanation why you need an increased rate limit.

### Status codes

When objects are created, we return a `201` response containing the `id` and `type` of the new resource:

```json
{
  "type": "contact",
  "id": "9d4096c3-813f-4bd5-b3c4-4091807b5b74"
}
```

When objects are updated or actions are performed, we often return an empty response with a `204` status code.

Common used status codes:

 - `200` - OK
 - `201` - Created, when resources are created
 - `204` - No Content, on resource updates or actions
 - `400` - Bad Request, the request contains invalid data or references non-existing resources
 - `401` - Unauthorized, invalid or missing access token
 - `403` - Forbidden, not allowed to access this resource
 - `404` - Not Found, resource not found
 - `429` - Too Many Requests, your client has reached the API rate limit
 - `500` - Internal Server Error, something went wrong on our end
